/* positioning.css: Comprehensive CSS Positioning Guide */

/* 1. Relative Positioning */
.parent {
    position: relative;
    top: 45px;     /* Moves element 45px down from its normal position */
    left: 75px;    /* Moves element 75px right from its normal position */
}

/* 2. Absolute Positioning */
.div1 {
    padding: 30px;
    margin: 10px;
    background-color: blueviolet;
    border: 2px solid black;
    width: 30vw;       /* 30% of viewport width */
    height: 5em;       /* 5 times the font size */
    position: absolute; /* Positioned relative to nearest positioned ancestor */
    bottom: 150px;     /* 150px from the bottom of positioned parent */
    z-index: 10;       /* Control stacking order */
}

/* 3. Sticky Positioning */
.sticky {
    position: sticky; /* Toggles between relative and fixed based on scroll position */
    right: 10px;      /* 10px from the right */
    top: 20px;        /* 20px from the top */
    height: 300px;
    background-color: #f0f0f0;
}

/* 4. Fixed Positioning (Always relative to viewport) */
.fixed-element {
    position: fixed;
    top: 50px;        /* 50px from top of viewport */
    left: 50px;       /* 50px from left of viewport */
    width: 200px;
    background-color: coral;
    z-index: 1000;    /* Ensures element stays on top */
}

/* 5. Static Positioning (Default) */
.static-element {
    position: static; /* Normal document flow */
    background-color: lightgreen;
}

/* 6. Complex Positioning Example */
.container {
    position: relative;
    width: 500px;
    height: 500px;
    border: 2px solid red;
}

.nested-absolute {
    position: absolute;
    top: 50px;        /* 50px from top of container */
    left: 50px;       /* 50px from left of container */
    width: 200px;
    height: 200px;
    background-color: rgba(0, 0, 255, 0.5);
}

/* 7. Overlapping with Z-index */
.z-index-example {
    position: absolute;
    width: 100px;
    height: 100px;
}

.background-layer {
    z-index: 1;
    background-color: lightblue;
}

.foreground-layer {
    z-index: 2;
    background-color: rgba(255, 0, 0, 0.5);
    top: 50px;
    left: 50px;
}

/* 8. Responsive Positioning */
@media screen and (max-width: 768px) {
    .responsive-positioned {
        position: relative;
        top: 0;
        left: 0;
        width: 100%;
    }
}

/* 9. Transform with Positioning */
.transformed-element {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); /* Center an element */
    width: 200px;
    height: 200px;
    background-color: yellow;
}

/* 10. Positioning with Flexbox and Grid */
.flex-container {
    display: flex;
    position: relative;
    justify-content: center;
    align-items: center;
    height: 300px;
}

.flex-positioned {
    position: absolute;
    right: 20px;
    bottom: 20px;
    background-color: purple;
    color: white;
    padding: 10px;
}
